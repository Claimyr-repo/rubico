/**
 * rubico v1.6.8
 * https://github.com/a-synchronous/rubico
 * (c) 2019-2020 Richard Tong
 * rubico may be freely distributed under the MIT license.
 */
const spread2=r=>function([t,n]){return r(t,n)},isPromise=r=>null!=r&&"function"==typeof r.then,promiseAll=Promise.all.bind(Promise),strictEqual=(r,t)=>r===t,__=Symbol.for("placeholder"),curry2ResolveArg0=(r,t)=>function(n){return r(n,t)},curry2ResolveArg1=(r,t)=>function(n){return r(t,n)},curry2=function(r,t,n){return t==__?curry2ResolveArg0(r,n):curry2ResolveArg1(r,t)},always=r=>function(){return r},eq=function(r,t){const n="function"==typeof r,e="function"==typeof t;return n&&e?function(n){const e=r(n),u=t(n),o=isPromise(e),c=isPromise(u);return o&&c?promiseAll([e,u]).then((i=strictEqual,function([r,t]){return i(r,t)})):o?e.then(curry2(strictEqual,__,u)):c?u.then(curry2(strictEqual,e,__)):e===u;var i}:n?function(n){const e=r(n);return isPromise(e)?e.then(curry2(strictEqual,__,t)):e===t}:e?function(n){const e=t(n);return isPromise(e)?e.then(curry2(strictEqual,r,__)):r===e}:(u=r===t,function(){return u});var u};export default eq;
