/**
 * rubico v1.6.9
 * https://github.com/a-synchronous/rubico
 * (c) 2019-2020 Richard Tong
 * rubico may be freely distributed under the MIT license.
 */
const spread2=r=>function([n,e]){return r(n,e)},isPromise=r=>null!=r&&"function"==typeof r.then,promiseAll=Promise.all.bind(Promise),equal=(r,n)=>r==n,__=Symbol.for("placeholder"),curry2ResolveArg0=(r,n)=>function(e){return r(e,n)},curry2ResolveArg1=(r,n)=>function(e){return r(n,e)},curry2=function(r,n,e){return n==__?curry2ResolveArg0(r,e):curry2ResolveArg1(r,n)},always=r=>function(){return r},eq=function(r,n){const e="function"==typeof r,u="function"==typeof n;return e&&u?function(e){const u=r(e),t=n(e),o=isPromise(u),c=isPromise(t);return o&&c?promiseAll([u,t]).then((i=equal,function([r,n]){return i(r,n)})):o?u.then(curry2(equal,__,t)):c?t.then(curry2(equal,u,__)):u==t;var i}:e?function(e){const u=r(e);return isPromise(u)?u.then(curry2(equal,__,n)):u==n}:u?function(e){const u=n(e);return isPromise(u)?u.then(curry2(equal,r,__)):r==u}:function(e){return null!=e&&"function"==typeof e.eq?e.eq(r,n):r==n}};export default eq;
