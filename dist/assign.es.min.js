/**
 * rubico v1.6.7
 * https://github.com/a-synchronous/rubico
 * (c) 2019-2020 Richard Tong
 * rubico may be freely distributed under the MIT license.
 */
const isPromise=r=>null!=r&&"function"==typeof r.then,objectAssign=Object.assign,__=Symbol.for("placeholder"),curry2ResolveArg0=(r,e)=>function(n){return r(n,e)},curry2ResolveArg1=(r,e)=>function(n){return r(e,n)},curry2=function(r,e,n){return e==__?curry2ResolveArg0(r,n):curry2ResolveArg1(r,e)},always=r=>function(){return r},promiseAll=Promise.all.bind(Promise),curry3ResolveArg0=(r,e,n)=>function(o){return r(o,e,n)},curry3ResolveArg1=(r,e,n)=>function(o){return r(e,o,n)},curry3ResolveArg2=(r,e,n)=>function(o){return r(e,n,o)},curry3=function(r,e,n,o){return e==__?curry3ResolveArg0(r,n,o):n==__?curry3ResolveArg1(r,e,o):curry3ResolveArg2(r,e,n)},objectSet=function(r,e,n){return r[e]=n,r},funcObjectAll=r=>function(...e){const n={},o=[];for(const l in r){const i=r[l](...e);isPromise(i)?o.push(i.then((t=objectSet,c=l,s=__,(u=n)==__?curry3ResolveArg0(t,c,s):c==__?curry3ResolveArg1(t,u,s):curry3ResolveArg2(t,u,c)))):n[l]=i}var t,u,c,s,l;return 0==o.length?n:promiseAll(o).then((l=n,function(){return l}))},assign=function(r){const e=funcObjectAll(r);return function(r){const n=e(r);return isPromise(n)?n.then((o=objectAssign,u=__,(t=r)==__?curry2ResolveArg0(o,u):curry2ResolveArg1(o,t))):{...r,...n};var o,t,u}};export default assign;
