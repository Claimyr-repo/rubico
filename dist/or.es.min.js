/**
 * rubico v1.6.2
 * https://github.com/a-synchronous/rubico
 * (c) 2019-2020 Richard Tong
 * rubico may be freely distributed under the MIT license.
 */
const isPromise=r=>null!=r&&"function"==typeof r.then,__=Symbol.for("placeholder"),curry3ResolveArg0=(r,e,n)=>function(t){return r(t,e,n)},curry3ResolveArg1=(r,e,n)=>function(t){return r(e,t,n)},curry3ResolveArg2=(r,e,n)=>function(t){return r(e,n,t)},curry3=function(r,e,n,t){return e==__?curry3ResolveArg0(r,n,t):n==__?curry3ResolveArg1(r,e,t):curry3ResolveArg2(r,e,n)},asyncOr=async function(r,e){const n=r.length;let t=-1;for(;++t<n;){let n=r[t](e);if(isPromise(n)&&(n=await n),n)return!0}return!1},_asyncOrInterlude=(r,e,n)=>!!n||asyncOr(r,e),or=r=>function(e){const n=r.length;let t=-1;for(;++t<n;){const n=r[t](e);if(isPromise(n))return n.then((o=_asyncOrInterlude,c=e,s=__,(u=r)==__?curry3ResolveArg0(o,c,s):c==__?curry3ResolveArg1(o,u,s):curry3ResolveArg2(o,u,c)));if(n)return!0}var o,u,c,s;return!1};export default or;
